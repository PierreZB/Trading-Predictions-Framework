LET vExternalDrive = 1;

LET vOutputContainer = 'rsi-014-080-020';

LET vInputFileName = 'EUR_USD_M10_20190101_20191015_simpleStratRSI_014-080-020';
//LET vInputFileName = 'EUR_USD_M10_20180101_20181231_simpleStratRSI_014-080-020';
//LET vInputFileName = 'EUR_USD_M10_20170101_20171231_simpleStratRSI_014-080-020';
//LET vInputFileName = 'EUR_USD_M10_20160101_20161231_simpleStratRSI_014-080-020';
//LET vInputFileName = 'EUR_USD_M10_20150101_20151231_simpleStratRSI_014-080-020';
//LET vInputFileName = 'EUR_USD_M10_20140101_20141231_simpleStratRSI_014-080-020';
//LET vInputFileName = 'EUR_USD_M10_20130101_20131231_simpleStratRSI_014-080-020';
//LET vInputFileName = 'EUR_USD_M10_20120101_20121231_simpleStratRSI_014-080-020';
//LET vInputFileName = 'EUR_USD_M10_20110101_20111231_simpleStratRSI_014-080-020';
//LET vInputFileName = 'EUR_USD_M10_20100101_20101231_simpleStratRSI_014-080-020';
//LET vInputFileName = 'EUR_USD_M10_20090101_20091231_simpleStratRSI_014-080-020';
//LET vInputFileName = 'EUR_USD_M10_20080101_20081231_simpleStratRSI_014-080-020';


LET vMainPath = if(vExternalDrive = 1 ,'TPF_data\', 'data\');

LET vInputPath = vMainPath & 'strategies\';
LET vOutputBacktestPath = vMainPath & 'strategy_backtesting\' & vOutputContainer & '\';
LET vOutputStatsPath = vMainPath & 'strategy_backtesting_stats\' & vOutputContainer & '\';

//*
LET vTakeProfitFrom = 30;
LET vTakeProfitTo = 30;
LET vTakeProfitStep = 1;

LET vStopLossFrom = 15;
LET vStopLossTo = 15;
LET vStopLossStep = 1;
//*/

TakeProfitValuesList:
LOAD Distinct
    Floor(($(vTakeProfitFrom) + RowNo() - 1), $(vTakeProfitStep)) as TakeProfitValues
AutoGenerate(1)
While
    Floor(($(vTakeProfitFrom) + RowNo() - 1), $(vTakeProfitStep))
    < Floor(($(vTakeProfitTo)), $(vTakeProfitStep))
;

Concatenate(TakeProfitValuesList)
LOAD 99999 as TakeProfitValues AutoGenerate(1);

StopLossValuesList:
LOAD Distinct
    Floor(($(vStopLossFrom) + RowNo() - 1), $(vStopLossStep)) as StopLossValues
AutoGenerate(1)
While
    Floor(($(vStopLossFrom) + RowNo() - 1), $(vStopLossStep))
    < Floor(($(vStopLossTo)), $(vStopLossStep))
;

Concatenate(StopLossValuesList)
LOAD 99999 as StopLossValues AutoGenerate(1);

TPSL_List:
NoConcatenate
LOAD * Resident TakeProfitValuesList;
JOIN
LOAD * Resident StopLossValuesList;

DROP Tables TakeProfitValuesList, StopLossValuesList;


//EXIT Script ;




MAP_actionCode:
Mapping
LOAD
    situationCode,
    actionCode
FROM [scripts\backtestStrategy.xls] (biff, embedded labels, table is Actions$);

tmpMAP:
LOAD
    @6 as F,
    @7 as G,
    @8 as H,
    @9 as I,
    @10 as J,
    @11 as K,
    @12 as L
FROM [scripts\backtestStrategy.xls] (biff, no labels, header is 1 lines, table is ActionsMap$);


/*
MAP_actionCode:
Mapping
LOAD
    situationCode,
    actionCode
FROM
[scripts\backtestingModel.xlsx]
(ooxml, embedded labels, table is Actions)
;

tmpMAP:
LOAD
    F,
    G,
    H,
    I,
    J,
    K,
    L
FROM [scripts\backtestingModel.xlsx] (ooxml, explicit labels, header is 1 lines, table is ActionsMap); */


MAP_codeForUpdatedPosition:
Mapping
LOAD
    F,
    G
Resident tmpMAP;

MAP_codeForPriceOnOpen:
Mapping
LOAD
    F,
    H
Resident tmpMAP;

MAP_codeFrPnLOnClose:
Mapping
LOAD
    F,
    I
Resident tmpMAP;

MAP_codeForIgnoreTradeAction:
Mapping
LOAD
    F,
    J
Resident tmpMAP;

MAP_buyingSignalsText:
Mapping
LOAD
    F,
    K
Resident tmpMAP;

MAP_sellingSignalsText:
Mapping
LOAD
    F,
    L
Resident tmpMAP;

DROP Table tmpMAP ;






strategy:
NoConcatenate
LOAD
    ID,
    instrument,
    granularity,
    timestamp,
    volume,
    open,
    high,
    low,
    close,
    complete,
    dateYYYYMMDD,
    timeHHMMSS,
    year,
    month,
    day,
    hour,
    minute,
    second,
    buyingSignal,
    sellingSignal,
    closingSignal,
    referencePriceHigher,
    referencePriceLower
FROM
[$(vInputPath)$(vInputFileName).csv]
(txt, codepage is 1252, embedded labels, delimiter is ',', msq);








For i = 0 to NoOfRows('TPSL_List') - 1

    LET vTakeProfit = Peek('TakeProfitValues', $(i), 'TPSL_List') / 10000;
    LET vStopLoss = Peek('StopLossValues', $(i), 'TPSL_List') / 10000;

    LET vOutputBacktest =
        vOutputBacktestPath
        & 'QV_'
        & '$(vInputFileName)'
        & '_TP' & Num($(vTakeProfit) * 10000, '00000')
        & '_SL' & Num($(vStopLoss) * 10000, '00000')
        & '.csv'
    ;

    LET vOutputStats =
        vOutputStatsPath
        & 'QV_' & '$(vInputFileName)'
        & '_TP' & Num($(vTakeProfit) * 10000, '00000')
        & '_SL' & Num($(vStopLoss) * 10000, '00000')
        & '_Stats.csv'
    ;

    SET vCurrentPosition =
    if(RowNo() = 1
        ,0
        ,ApplyMap(
            'MAP_codeForUpdatedPosition'
            ,peek('actionCode')
            ,'MAP_codeForUpdatedPosition ' & peek('actionCode')
        )
    );

    SET vPriceOnOpenPosition =
    if(ApplyMap(
        'MAP_codeForPriceOnOpen'
        ,peek('actionCode')
        ,'MAP_codeForUpdatedPosition ' & peek('actionCode')
    ) = 2
        ,peek('priceOnOpenPosition')
        ,if(ApplyMap(
                'MAP_codeForPriceOnOpen'
                ,peek('actionCode')
                ,'MAP_codeForUpdatedPosition ' & peek('actionCode')
            ) = 1
            ,open
            ,null()
        )
    );

    SET vReferencePriceHigherUpdated =
    if(referencePriceHigher = 0, $(vPriceOnOpenPosition), referencePriceHigher)
    ;

    SET vReferencePriceLowerUpdated =
    if(referencePriceLower = 0, $(vPriceOnOpenPosition), referencePriceLower)
    ;

    SET vNumberOfPeriods =
    if(ApplyMap(
            'MAP_codeForPriceOnOpen'
            ,peek('actionCode')
            ,'MAP_codeForUpdatedPosition ' & peek('actionCode')
        ) = 2
        ,RangeSum(peek('numberOfPeriods'), 1)
        ,if(ApplyMap(
                'MAP_codeForPriceOnOpen'
                ,peek('actionCode')
                ,'MAP_codeForUpdatedPosition ' & peek('actionCode')
            ) = 1
            ,1
            ,null()
        )
    )
    ;

    SET vHitTakeProfit =
    if(($(vCurrentPosition) = 1 and high - $(vReferencePriceHigherUpdated) >= $(vTakeProfit))
    or ($(vCurrentPosition) = 2 and $(vReferencePriceLowerUpdated) - low >= $(vTakeProfit))
        ,1
        ,0
    );

    SET vHitStopLoss =
    if(($(vCurrentPosition) = 1 and $(vReferencePriceLowerUpdated) - low >= $(vStopLoss))
    or ($(vCurrentPosition) = 2 and high - $(vReferencePriceHigherUpdated) >= $(vStopLoss))
        ,1
        ,0
    );

    SET vSituationCode =
    9000000                         +
    100000  * $(vCurrentPosition)   +
    10000   * buyingSignal          +
    1000    * sellingSignal         +
    100     * closingSignal         +
    10      * $(vHitTakeProfit)     +
    1       * $(vHitStopLoss)
    ;

    SET vActionCode =
    ApplyMap(
        'MAP_actionCode'
        ,$(vSituationCode)
        ,'MAP_actionCode ' & $(vSituationCode)
    );


    SET vCodePnLOnClose =
    ApplyMap(
        'MAP_codeFrPnLOnClose'
        ,$(vActionCode)
        ,'MAP_codeFrPnLOnClose ' & $(vActionCode)
    );

    SET vProfitLossOnClose =
    Round(
    if($(vCodePnLOnClose) = 1
        ,close - $(vReferencePriceHigherUpdated)
        ,if($(vCodePnLOnClose) = 2
            ,$(vReferencePriceLowerUpdated) - close
            ,if($(vCodePnLOnClose) = 3
                ,$(vTakeProfit)
                ,if($(vCodePnLOnClose) = 4
                    ,(-1) *
                    ($(vReferencePriceHigherUpdated) -
                    $(vReferencePriceLowerUpdated) +
                    $(vStopLoss))
                    ,if($(vCodePnLOnClose) = 5
                        ,if(Rand() > 0.5
                            ,$(vTakeProfit)
                            ,(-1) *
                            ($(vReferencePriceHigherUpdated) -
                            $(vReferencePriceLowerUpdated) +
                            $(vStopLoss))
                        )
                        ,null()
                    )
                )
            )
        )
    )
    , 0.00001)
    ;



    TRACE Start Load tmp01 ;



    tmp01:
    NoConcatenate
    LOAD
        *,
        $(vCurrentPosition)                 as currentPosition,
        $(vPriceOnOpenPosition)             as priceOnOpenPosition,
        $(vNumberOfPeriods)                 as numberOfPeriods,
        $(vHitTakeProfit)                   as hitTakeProfit,
        $(vHitStopLoss)                     as hitStopLoss,
        $(vSituationCode)                   as situationCode,
        $(vActionCode)                      as actionCode,
        $(vCodePnLOnClose)                  as codePnLOnClose,
        $(vReferencePriceHigherUpdated)     as referencePriceHigherUpdated,
        $(vReferencePriceLowerUpdated)      as referencePriceLowerUpdated,
        $(vProfitLossOnClose)               as profitLossOnClose
    Resident strategy
    ;


    tmp02:
    NoConcatenate
    LOAD
        *,
        if(hitTakeProfit = 1 and hitStopLoss = 0 and
        (statsBuyingPosition = 1 or statsSellingPosition = 1)
            ,1
            ,null()
        )
                                                            as statsHitTakeProfit,
        if(hitTakeProfit = 0 and hitStopLoss = 1 and
        (statsBuyingPosition = 1 or statsSellingPosition = 1)
            ,1
            ,null()
        )
                                                            as statsHitStopLoss,
        if(hitTakeProfit = 1 and hitStopLoss = 1 and
        (statsBuyingPosition = 1 or statsSellingPosition = 1)
            ,1
            ,null()
        )
                                                            as statsHitTakeProfitAndStopLoss,
        if(numberOfPeriods > 0 and
        (statsBuyingPosition = 1 or statsSellingPosition = 1)
            ,numberOfPeriods
            ,null()
        )
                                                            as statsNumberOfPeriods,
        $(vTakeProfit) * 10000                              as takeProfit,
        $(vStopLoss) * 10000                                as stopLoss
    ;
    LOAD
        *,
        if(tradingPositionTmp = 1, 1, null())               as statsBuyingPosition,
        if(tradingPositionTmp = 2, 1, null())               as statsSellingPosition
    ;
    LOAD
        *,
        if(profitLossOnClose < 999999, currentPosition, 0)  as tradingPositionTmp,
        ApplyMap(
            'MAP_buyingSignalsText'
            ,actionCode
            ,'MAP_buyingSignalsText ' & actionCode
        )
                                                            as buyingSignalText,
        ApplyMap(
            'MAP_sellingSignalsText'
            ,actionCode
            ,'MAP_sellingSignalsText ' & actionCode
        )
                                                            as sellingSignalText,
        ApplyMap(
            'MAP_codeForIgnoreTradeAction'
            ,actionCode
            ,'MAP_codeForIgnoreTradeAction ' & actionCode
        )
                                                            as noActionTaken,
        '$(vInputFileName)'
        & '_TP' & Num($(vTakeProfit) * 10000, '00000')
        & '_SL' & Num($(vStopLoss) * 10000, '00000')
                                                            as sourceFile
    Resident tmp01
    ;

    DROP Table tmp01 ;

    backtest:
    NoConcatenate
    LOAD
        ID,
        instrument,
        granularity,
        timestamp,
        volume,
        open,
        high,
        low,
        close,
        complete,
        dateYYYYMMDD,
        timeHHMMSS,
        year,
        month,
        day,
        hour,
        minute,
        second,
        buyingSignal,
        sellingSignal,
        closingSignal,
        buyingSignalText,
        sellingSignalText,
        profitLossOnClose
    Resident tmp02
    ;

    stats:
    NoConcatenate
    LOAD
        ID,
        sourceFile,
        granularity,
        timestamp,
        takeProfit,
        stopLoss,
        profitLossOnClose,
        statsBuyingPosition             as buyingPosition,
        statsSellingPosition            as sellingPosition,
        statsHitTakeProfit              as hitTakeProfit,
        statsHitStopLoss                as hitStopLoss,
        statsHitTakeProfitAndStopLoss   as hitTakeProfitAndStopLoss,
        statsNumberOfPeriods            as numberOfPeriods,
        noActionTaken
    Resident tmp02
    Where
        profitLossOnClose < 999999
        or noActionTaken = 1
    ;


    STORE backtest into [$(vOutputBacktest)] (txt);
    STORE stats into [$(vOutputStats)] (txt);

    DROP Table tmp02, backtest, stats;

    LET vTRACE = '===== TP ' & $(vTakeProfit) * 10000 & ' | SL ' & $(vStopLoss) * 10000 & ' | ' & '$(vOutputBacktest)' & ' =====' ;
    TRACE ;TRACE $(vTRACE) ;TRACE ;

Next i ;

DROP Table strategy ;

DROP Table TPSL_List ;
